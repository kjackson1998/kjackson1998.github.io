export class ApiError extends Error{constructor(t,e){super("API Error"),this.response=t,this.responseText=e,this.responseJson=null,this.code=null,this.data=null;try{this.responseJson=JSON.parse(this.responseText),this.message=this.responseJson?.error?.message,this.code=this.responseJson?.error?.code,this.data=this.responseJson?.error?.data}catch{}}static async create(t){return new ApiError(t,await t.text())}}export default class t{constructor(t){this.baseUrl="https://api.spacetraders.io/v2/",this.authKey=null,this.rateRemaining=2,this.rateResetAt=null,this.fetch=t}fixBase(t){try{return new URL(t),t}catch(e){return this.baseUrl+t}}async callApiPaged(t,e,s){t=this.fixBase(t);const a=[];let r=1,i=null;do{(t=new URL(t)).searchParams.set("limit",20),t.searchParams.set("page",r),t=t.toString(),i=await this.callApi(t,e,s),a.push(...i.data),r++}while(i.meta.page<i.meta.total/i.meta.limit);return a}async callApi(t,e,s,a=!1){t=this.fixBase(t);const r={Accept:"application/json"};this.authKey&&(r.Authorization="Bearer "+this.authKey);const i={headers:r};for(e&&(i.method=e),s&&(i.body=JSON.stringify(s));;){if(a&&this.rateRemaining<=0){const t=Date.now();if(t<this.rateResetAt){const e=this.rateResetAt-t;await new Promise((t=>setTimeout(t,e)))}}const e=await this.fetch(t,i);if(this.rateRemaining=parseInt(e.headers.get("x-ratelimit-remaining")),this.rateResetAt=new Date(e.headers.get("x-ratelimit-reset")),429!=e.status){if(!e.ok)throw await ApiError.create(e);return await e.json()}console.log("429: "+(this.rateResetAt-Date.now())),a=!0}}}